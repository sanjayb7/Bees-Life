/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React, { useRef, useState } from "react";

const WING_FLAP_AMPLITUDE = Math.PI / 6; // 30 degrees in radians
const WING_FLAP_FREQUENCY = 10; // Adjust this for the flapping speed


export function Bee(props) {
  const { nodes, materials } = useGLTF("./models/bee/model.glb");

  const [flapAngle, setFlapAngle] = useState(0);

  useFrame((_state, delta) => {
    // Calculate the wing flap angle using a sine wave
    const time = performance.now() * 0.001;
    const wingFlap = Math.sin(time * WING_FLAP_FREQUENCY) * WING_FLAP_AMPLITUDE;

    // Update the flap angle state
    setFlapAngle(wingFlap);
  });


  return (
    <group {...props} dispose={null}>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Geo_Bee.geometry}
      material={materials.lambert3SG}
      rotation={[ Math.PI / 2,0, -Math.PI / 2]}
      scale={[0.1, 0.1, 0.1]}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.wing2.geometry}
      material={materials.lambert2SG}
      rotation={[Math.PI / 2 + flapAngle, 0, -Math.PI / 2]}
      scale={[0.1, 0.1, 0.1]}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.wing1.geometry}
      material={materials.lambert2SG}
      rotation={[Math.PI / 2 - flapAngle, 0, -Math.PI / 2]}
      scale={[0.1, 0.1, 0.1]}
    />
  </group>
  );
}

useGLTF.preload("./models/bee/model.glb");
